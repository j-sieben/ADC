NDSummary.OnToolTipsLoaded("File:core/packages/adc_recursion_stack.pks",{677:"<div class=\"NDToolTip TClass LSQL\"><div class=\"TTSummary\">This package separates the maintenance of the recursive stack from the core functionality.&nbsp; It is accessible by ADC_INTERNAL only.</div></div>",679:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype679\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> reset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_crg_id&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_rule_groups.crg_id<span class=\"SHKeyword\">%type</span>,</td></tr><tr><td class=\"PName first\">p_cpi_id&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_page_items.cpi_id<span class=\"SHKeyword\">%type</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to reset the recursion stack.</div></div>",680:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype680\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> push_firing_item(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_crg_id&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_rule_groups.crg_id<span class=\"SHKeyword\">%type</span>,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">p_cpi_id&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_page_items.cpi_id<span class=\"SHKeyword\">%type</span>,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">p_event&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_page_item_types.cpit_cet_id<span class=\"SHKeyword\">%type</span>,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">p_event_data&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_util.max_char</td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span>,</td></tr><tr><td class=\"PName first\">p_allow_recursion&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_util.flag_type</td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\">adc_util.C_TRUE,</td></tr><tr><td class=\"PName first\">p_force&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_util.flag_type</td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\">adc_util.C_FALSE</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to register a firing item onto the recursion stack.</div></div>",681:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype681\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> register_touched_item(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_cpi_id&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_page_items.cpi_id<span class=\"SHKeyword\">%type</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to register that a validation or similar has &quot;touched&quot; a page item. This method is used to make sure that any errors which were shown on the page are removed from the error list, even if the page items were not processed as part of a rule evaluation.&nbsp; This could happen, if the page as a whole is validated.</div></div>",682:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype682\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> pop_firing_item(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_cpi_id&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_page_items.cpi_id<span class=\"SHKeyword\">%type</span>,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">p_all&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> adc_util.flag_type</td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\">adc_util.C_FALSE</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to pop one or all items from the recursive stack.</div></div>",683:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype683\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> check_recursion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_cra_cpi_id&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_rule_actions.cra_cpi_id<span class=\"SHKeyword\">%type</span>,</td></tr><tr><td class=\"PName first\">p_cru_fire_on_page_load&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_rules.cru_fire_on_page_load<span class=\"SHKeyword\">%type</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return</span> adc_util.flag_type</div></div><div class=\"TTSummary\">Method to determine whether rule execution has to be checked for recursive allowance.</div></div>",684:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype684\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> get_next(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_cpi_id&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">out nocopy</span> adc_page_items.cpi_id<span class=\"SHKeyword\">%type</span>,</td></tr><tr><td class=\"PName first\">p_event&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">out nocopy</span> adc_page_item_types.cpit_cet_id<span class=\"SHKeyword\">%type</span>,</td></tr><tr><td class=\"PName first\">p_event_data&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">out nocopy varchar2</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to retrieve the name of the first entry of the recursion stack.</div></div>",685:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype685\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> get_level</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return</span> pls_integer</div></div><div class=\"TTSummary\">Method to retrieve the actual recursion level for notification purposes.</div></div>",686:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype686\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> get_firing_items_as_json</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Method get all firing items back in&nbsp; JSON</div></div>"});