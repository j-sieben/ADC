NDContentPage.OnToolTipsLoaded({180:"<div class=\"NDToolTip TType LSQL\"><div class=\"TTSummary\">JavaScript snippet with hash and debug level as entry for javascript_list.</div></div>",181:"<div class=\"NDToolTip TType LSQL\"><div class=\"TTSummary\">Stack of javascript_rec containing all collected JavaScript snippets for the response.</div></div>",560:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype560\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> add_error(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_error&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> apex_error.t_error</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Pushes an APEX error instance onto an internal error stack.&nbsp; All errors are integrated into the response when retrieving the JavaScript answer.</div></div>",561:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype561\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> add_javascript(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_java_script&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in varchar2</span>,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">p_debug_level&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in binary_integer</span></td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\">adc_util.C_JS_CODE</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to add a JavaScript code snippet to the response.</div></div>",562:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype562\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> add_comment(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_message_name&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in varchar2</span>,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">p_msg_args&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> msg_args</td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Adds a comment to the JavaScript answer if applicable. Is used to append comments about the inner workings to the JavaScript answer. Whether a message is added depends on the severity of the message and debug level.</div></div>",563:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype563\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> get_response</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Method to compose the JavaScript result of the rule evaluation</div></div>",565:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype565\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> register_recursion_end(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_rule_found&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in boolean</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method finalizes the response of the actual recursive rule evaluation.</div></div>",566:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype566\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> register_recursion_start(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_origin_message&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_util.ora_name_type,</td></tr><tr><td class=\"PName first\">p_run_count&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in binary_integer</span>,</td></tr><tr><td class=\"PName first\">p_cru_sort_seq&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_rules.cru_sort_seq<span class=\"SHKeyword\">%type</span>,</td></tr><tr><td class=\"PName first\">p_cru_name&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_rules.cru_name<span class=\"SHKeyword\">%type</span>,</td></tr><tr><td class=\"PName first\">p_firing_item&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_util.ora_name_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method initializes the response of the actual recursive rule evaluation.</div></div>"});