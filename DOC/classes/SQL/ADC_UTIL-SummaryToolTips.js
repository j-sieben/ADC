NDSummary.OnToolTipsLoaded("SQLClass:ADC_UTIL",{592:"<div class=\"NDToolTip TClass LSQL\"><div class=\"TTSummary\">Provides data types, constants and generic helper functions for ADC.</div></div>",599:"<div class=\"NDToolTip TType LSQL\"><div class=\"TTSummary\">Record that defines environmental information about the actually executed rule Is used in adc_validation for checks against the meta data of ADC</div></div>",618:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype618\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> C_CR</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Getter method to retrive a operation system aware return character</div></div>",619:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype619\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> C_APOS</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Getter method to retrive an apostrophe character</div></div>",620:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype620\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> C_TRUE</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return</span> flag_type</div></div><div class=\"TTSummary\">Getter method to retrieve a TRUE value as a flag_type</div></div>",621:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype621\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> C_FALSE</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return</span> flag_type</div></div><div class=\"TTSummary\">Getter method to retrieve a FALSE value as a flag_type</div></div>",622:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype622\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> C_HASH</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Method to retrieve a replacement char for # character Used to mask the # character to avoid page effects in UTL_TEXT.&nbsp; When delivering the JavaScript code, the character will be replaced by the # character again</div></div>",623:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype623\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> get_boolean(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_bool&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in varchar2</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return</span> adc_util.flag_type</div></div><div class=\"TTSummary\">Helper to map different boolean values to TRUE or FALSE.&nbsp; Is used to map &quot;TRUTHY&quot; values to true and &quot;FALSY&quot; value to false.&nbsp; Used to stabilize im- and export of meta data between versions of ADC</div></div>",624:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype624\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> bool_to_flag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_bool&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in boolean</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return</span> adc_util.flag_type</div></div><div class=\"TTSummary\">Method to cast a boolean value to it\'s flag_type representation</div></div>",625:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype625\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> to_bool(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_bool&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> flag_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Helper to create a string adc_util.C_TRUE/FALSE based upon parameter value.&nbsp; Is used in export scripts to replace the actual boolean value with a reference to this package.&nbsp; This is required to make the export scripts eligible for any FLAG_TYPE.</div></div>",626:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype626\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> to_javascript_boolean(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_flag&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_util.flag_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Method to retrieve a JavaScript boolean value from a adc_util.FLAG_TYPE.</div></div>",627:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype627\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> clean_adc_name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_name&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in varchar2</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Helper to sanitize any ADC name to comply with internal naming rules Name that adheres to the following naming conventions: - no quotes - no blanks (replaced by underscores) - all uppercase - length limit 50</div></div>",628:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype628\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> harmonize_page_item_name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_cpi_id&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> adc_page_items.cpi_id<span class=\"SHKeyword\">%type</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Method to assure that a page item has got a page prefix</div></div>",629:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype629\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> get_trans_item_name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_item&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in varchar2</span>,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">p_msg_args&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in</span> msg_args</td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return varchar2</span></div></div><div class=\"TTSummary\">Wrapper around PIT.get_trans_item_name that sets the trans item group to ADC</div></div>",630:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype630\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> close_cursor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_cur&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in</span> sys_refcursor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to savely close a cursor The method checks whether the cursor is still open and closes it in this case.</div></div>",631:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype631\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> monitor_loop(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_counter&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in number</span></td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span>,</td></tr><tr><td class=\"PName first\">p_loop_name&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">in varchar2</span></td><td class=\"PDefaultValueSeparator\">&nbsp;<span class=\"SHKeyword\">default</span>&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to monitor that loops can\'t go into infinite loop mode.&nbsp; If the parameters are NULL, a new monitor is instantiated. Within the loop this method is called with a variable holding the amount of loops so far The method increments this variable and checks it against the maximally allowed loop operations. If it exceeds this limit, an exception is thrown</div></div>",632:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype632\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> get_additional_nd_comments</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return clob</span></div></div><div class=\"TTSummary\">Method collects additional comments in NaturalDocs syntax and returns them as CLOB. The content of the comments describes tables and views and picks up their comments and column names.</div></div>",633:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype633\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> get_test_mode</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return boolean</span></div></div><div class=\"TTSummary\">Method to retrieve the actual test mode state</div></div>",634:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype634\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection PascalStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">procedure</span> set_test_mode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">p_flag&nbsp;</td><td class=\"PType last\"><span class=\"SHKeyword\">in boolean</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Method to set the actual test mode state</div></div>",635:"<div class=\"NDToolTip TFunction LSQL\"><div id=\"NDPrototype635\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">function</span> get_environment</div><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">return</span> environment_rec</div></div><div class=\"TTSummary\">Method to populate an instance of environment_rec with actual information.</div></div>"});